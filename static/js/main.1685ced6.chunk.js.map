{"version":3,"sources":["emailkey.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","USER_ID","ACCESS_TOKEN","TEMPLATE_ID","SERVICE_ID","init","initFormValues","firstname","lastname","email","phone","message","App","useState","formValues","setFormValues","handleChange","e","persist","values","target","name","value","className","onSubmit","preventDefault","console","log","emailjs","send","then","result","alert","text","error","type","placeholder","onChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAOeA,EAPA,CACbC,QAAQ,6BACRC,aAAa,mCACbC,YAAY,mBACZC,WAAW,mB,eCCbC,eAAKL,EAAOE,cAUZ,IAAMI,EAAiB,CACrBC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,QAAS,IA0GIC,MAvGf,WACE,MAAoCC,mBAASP,GAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,EAAe,SAACC,GACpBA,EAAEC,UACFH,GAAc,SAACI,GAAD,mBAAC,eACVA,GADS,kBAEXF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,YAoB9B,OACE,qBAAKC,UAAU,YAAf,SACE,uBAAMC,SAlBW,SAACP,GACpBA,EAAEQ,iBACFC,QAAQC,IAAR,IAAiBV,EAAEG,QACnBQ,IACGC,KAAK7B,EAAOI,WAAYJ,EAAOG,YAAaW,EAAYd,EAAOC,SAC/D6B,MACC,SAACC,GACCC,MAAM,gDAAiDD,EAAOE,MAC9DlB,EAAcT,MAEhB,SAAC4B,GACCF,MAAM,sCAAuCE,EAAMD,UAOvD,UACE,sBAAKV,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,wBACA,qBAAKA,UAAU,UAAf,SACE,uBACEA,UAAU,QACVY,KAAK,OACLC,YAAY,aACZf,KAAK,YACLC,MAAOR,EAAWP,UAClB8B,SAAUrB,SAIhB,sBAAKO,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,uBACA,qBAAKA,UAAU,UAAf,SACE,uBACEA,UAAU,QACVY,KAAK,OACLC,YAAY,YACZf,KAAK,WACLC,MAAOR,EAAWN,SAClB6B,SAAUrB,SAIhB,sBAAKO,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,mBACA,qBAAKA,UAAU,UAAf,SACE,uBACEA,UAAU,QACVY,KAAK,OACLC,YAAY,QACZf,KAAK,QACLC,MAAOR,EAAWL,MAClB4B,SAAUrB,SAIhB,sBAAKO,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,mBACA,qBAAKA,UAAU,UAAf,SACE,uBACEA,UAAU,QACVY,KAAK,OACLC,YAAY,QACZf,KAAK,QACLC,MAAOR,EAAWJ,MAClB2B,SAAUrB,SAIhB,sBAAKO,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,qBACA,qBAAKA,UAAU,UAAf,SACE,0BACEA,UAAU,WACVa,YAAY,UACZf,KAAK,UACLC,MAAOR,EAAWH,QAClB0B,SAAUrB,SAIhB,sBAAKO,UAAU,UAAf,UACE,uBAAOY,KAAK,SAASZ,UAAU,oBAAoBD,MAAM,WACzD,uBAAOa,KAAK,QAAQZ,UAAU,iBAAiBD,MAAM,mBC3GhDgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1685ced6.chunk.js","sourcesContent":["const apiKey = {\r\n  USER_ID: `user_5o9cwMv1gJsoj728NUH2S`, //userID\r\n  ACCESS_TOKEN: `e7c4128917db8e8a741c21a5297e6341`,\r\n  TEMPLATE_ID: `template_lh8qx58`, //templateID\r\n  SERVICE_ID: `service_wa0t08f`,\r\n};\r\n\r\nexport default apiKey;\r\n","import { useState } from \"react\";\nimport emailjs, { init } from \"emailjs-com\";\nimport apiKey from \"./emailkey\";\nimport \"./App.css\";\n\ninit(apiKey.ACCESS_TOKEN);\n\n// var templateParams = {\n//   firstname: \"James\",\n//   lastname: \"Banerjee\",\n//   email: \"souviiik@gmail.com\",\n//   phone: \"8334891888\",\n//   message: \"Check this out!\",\n// };\n\nconst initFormValues = {\n  firstname: \"\",\n  lastname: \"\",\n  email: \"\",\n  phone: \"\",\n  message: \"\",\n};\n\nfunction App() {\n  const [formValues, setFormValues] = useState(initFormValues);\n\n  const handleChange = (e) => {\n    e.persist();\n    setFormValues((values) => ({\n      ...values,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevents default refresh by the browser\n    console.log(`e`, e.target);\n    emailjs\n      .send(apiKey.SERVICE_ID, apiKey.TEMPLATE_ID, formValues, apiKey.USER_ID)\n      .then(\n        (result) => {\n          alert(\"Message Sent, We will get back to you shortly\", result.text);\n          setFormValues(initFormValues);\n        },\n        (error) => {\n          alert(\"An error occurred, Please try again\", error.text);\n        }\n      );\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\">First Name</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"First Name\"\n              name=\"firstname\"\n              value={formValues.firstname}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Last Name</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Last Name\"\n              name=\"lastname\"\n              value={formValues.lastname}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Email</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={formValues.email}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Phone</label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Phone\"\n              name=\"phone\"\n              value={formValues.phone}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Message</label>\n          <div className=\"control\">\n            <textarea\n              className=\"textarea\"\n              placeholder=\"Message\"\n              name=\"message\"\n              value={formValues.message}\n              onChange={handleChange}\n            ></textarea>\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <input type=\"submit\" className=\"button is-primary\" value=\"Submit\" />\n          <input type=\"reset\" className=\"button is-link\" value=\"Reset\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}